{"version":3,"sources":["webpack:///./src/app/authentication/login-basic/logout-basic.component.ts","webpack:///./src/app/authentication/services/auth-guard.service.ts","webpack:///./src/app/login1/address/address.component.ts","webpack:///./src/app/login1/layout/dashboard.layout.component.ts","webpack:///./src/app/login1/login1-routing.module.ts","webpack:///./src/app/login1/login1.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAkD;AAET;AAEc;AAQvD;IAEI,8BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IACvE,CAAC;IACE,uCAAQ,GAAR;QACG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;IAC1D,CAAC;IACJ,qCAAM,GAAN;QACG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAE,CAAC,CAAC;IAC/D,CAAC;;gBARmC,kEAAW;gBAAkB,sDAAM;;IAF3D,oBAAoB;QANhC,+DAAS,CAAC;YACR,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,4IAEX;SACD,CAAC;yCAGmC,kEAAW,EAAkB,sDAAM;OAF3D,oBAAoB,CAWhC;IAAD,2BAAC;CAAA;AAXgC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZgB;AACoE;AACnE;AAKlD;IAEE,0BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IACpE,CAAC;IACD,sCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,IAAI,GAAG,GAAW,KAAK,CAAC,GAAG,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,GAAE,GAAG,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE;YACtC,OAAO,IAAI,CAAC;SACZ;QACE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAE,CAAC,CAAC;QAC5D,OAAO,KAAK,CAAC;IACZ,CAAC;IACD,2CAAgB,GAAhB,UAAiB,KAA6B,EAAE,KAA0B;QACxE,IAAI,YAAY,GAAE,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;QACxD,IAAI,YAAY,CAAC,IAAI,KAAK,OAAO,EAAE;YAC/B,OAAO,IAAI,CAAC;SACf;aAAM;YACN,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAE,KAAK,CAAC,GAAG,CAAC,CAAC;YACtD,OAAO,KAAK,CAAC;SACb;IACA,CAAC;;gBApBgC,yDAAW;gBAAkB,sDAAM;;IAFzD,gBAAgB;QAH5B,gEAAU,CAAC;YACX,UAAU,EAAC,MAAM;SACjB,CAAC;yCAGiC,yDAAW,EAAkB,sDAAM;OAFzD,gBAAgB,CAuB5B;IAAD,uBAAC;CAAA;AAvB4B;;;;;;;;;;;;;;;;;;;;;;ACPa;AAS1C;IAAA;IACA,CAAC;IADY,gBAAgB;QAR5B,+DAAS,CAAC;YACT,QAAQ,EAAE,wLAKT;SACF,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;;;;;;;;;;;ACTa;AAc1C;IAAA;IACA,CAAC;IADY,wBAAwB;QAbpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sUAUT;SACF,CAAC;OACW,wBAAwB,CACpC;IAAD,+BAAC;CAAA;AADoC;;;;;;;;;;;;;;;;;;;;;;;;;;ACdI;AACc;AACwB;AACE;AAClB;AAE/D,IAAM,MAAM,GAAW;IAEtB;QACG,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2FAAwB;QACnC,WAAW,EAAE,CAAE,4FAAgB,CAAE;QACjC,QAAQ,EAAE;YACV;gBACG,IAAI,EAAE,SAAS;gBACf,YAAY,EAAC,cAAI,kNAAkC,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,aAAa,EAAjB,CAAiB,CAAC,EAAjE,CAAiE;gBAClF,2CAA2C;aAC7C;YACD;gBACG,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2EAAgB;aAC7B;SACA;KACH;CAED,CAAC;AAMF;IAAA;IAGC,CAAC;IAFO,8BAAU,GAAC,CAAC,2FAAwB,EAAC,2EAAgB,CAAC,CAAC;IADnD,mBAAmB;QAJ/B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAG9B;IAAD,0BAAC;CAAA;AAH8B;;;;;;;;;;;;;;;;;;;;;;;;;AC/BgC;AACjB;AACe;AAC4B;AAY1F;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAXxB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAmB,CAAC,UAAU,EAAC,uGAAoB;aACpD;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAmB;aACpB;YACD,OAAO,EAAC,CAAC,0EAAmB,CAAC,UAAU,CAAC;YACxC,OAAO,EAAC,CAAC,oEAAsB,CAAC;SACjC,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ","file":"login1-login1-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../services/user';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n   selector: 'app-basic-logout',\t\r\n   template: `Logged In: {{loggedInUser.username}} | {{loggedInUser.role}} | \r\n           <button input='input' (click)=\"logout()\">Logout</button>\r\n\t`\r\n})\r\nexport class LogoutBasicComponent { \r\n\tloggedInUser: User;\r\n    constructor(private authService: AuthService, private router: Router) {\r\n\t}\r\n    ngOnInit() {\r\n       this.loggedInUser = this.authService.getLoggedInUser();\r\n    }\t\t\r\n\tlogout() {\r\n\t   this.authService.logoutUser();\r\n       this.router.navigate([ this.authService.getLoginUrl() ]);\t\r\n\t}\r\n}\r\n    ","import { Injectable }       from '@angular/core';\r\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService }      from './auth.service';\r\n\r\n@Injectable({\r\n\tprovidedIn:'root'\r\n})\r\nexport class AuthGuardService implements CanActivate, CanActivateChild {\r\n  \t\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    let url: string = state.url;\r\n\tconsole.log('Url:'+ url);\r\n\tif (this.authService.isUserLoggedIn()) {\r\n\t\treturn true; \r\n\t}\r\n    this.authService.setRedirectUrl(url);\r\n    this.router.navigate([ this.authService.getLoginUrl() ]);\r\n\treturn false;\r\n  }\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    let loggedInUser= this.authService.getLoggedInUser();\r\n\tif (loggedInUser.role === 'ADMIN') {\r\n\t    return true;\t\t\r\n\t} else {\r\n\t\tconsole.log('Unauthorized to open link: '+ state.url);\r\n\t\treturn false;\r\n\t}\r\n  }  \r\n}","import { Component } from '@angular/core';\r\n@Component({\r\n  template: `\r\n      <h3>ADDRESS</h3>\r\n      <p><b> Article: Child routing & Relative navigation </b></p>\r\n\t  <p><b> Category: Angular </b></p>\r\n\t  <p><b> Website: CONCRETEPAGE.COM </b></p>\r\n  `\r\n})\r\nexport class AddressComponent { \r\n}\r\n    ","import { Component } from '@angular/core';\r\n@Component({\r\n  template: `\r\n\t <ul>\r\n\t <li><a routerLink=\"./article\" routerLinkActive=\"active\" >Article</a></li>\r\n   <li><a routerLink=\"./address\" routerLinkActive=\"active\">Address</a></li>\r\n  </ul> \r\n  <app-basic-logout></app-basic-logout>\r\n\r\n  <div [ngClass] = \"'parent-container'\">\t\r\n\t  <router-outlet></router-outlet>\t\r\n\t</div>\r\n  `\r\n})\r\nexport class DashboardLayoutComponent { \r\n}\r\n    ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardLayoutComponent } from './layout/dashboard.layout.component';\nimport { AuthGuardService } from '../authentication/services/auth-guard.service';\nimport { AddressComponent } from './address/address.component';\n\nconst routes: Routes = [\n  \n {\n    path: '',\n    component: DashboardLayoutComponent,\n    canActivate: [ AuthGuardService ],\n    children: [\n    {\n       path: 'article',\n       loadChildren:()=>import('./article/article.module').then(mod => mod.ArticleModule)\n       // './article/article.module#ArticleModule'\n    },\n    {\n       path: 'address',\n       component: AddressComponent\n    }\n    ]\t\t\n }\n \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Login1RoutingModule {\n  static components=[DashboardLayoutComponent,AddressComponent];\n\n }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Login1RoutingModule } from './login1-routing.module';\nimport {LogoutBasicComponent} from '../authentication/login-basic/logout-basic.component';\n@NgModule({\n  declarations: [\n    Login1RoutingModule.components,LogoutBasicComponent\n  ],\n  imports: [\n    CommonModule,\n    Login1RoutingModule\n  ],\n  exports:[Login1RoutingModule.components],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class Login1Module { }\n"],"sourceRoot":""}