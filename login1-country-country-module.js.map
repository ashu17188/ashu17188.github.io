{"version":3,"sources":["webpack:///./src/app/login1/country/add-country/add-country.component.html","webpack:///./src/app/login1/country/country-list/country.list.component.html","webpack:///./src/app/login1/country/country-list/edit/country.edit.component.html","webpack:///./src/app/login1/country-edit-can-deactivate-guard.service.ts","webpack:///./src/app/login1/country/add-country/add-country.component.ts","webpack:///./src/app/login1/country/country-list/country.list.component.ts","webpack:///./src/app/login1/country/country-list/edit/country.edit.component.ts","webpack:///./src/app/login1/country/country-routing.module.ts","webpack:///./src/app/login1/country/country.component.ts","webpack:///./src/app/login1/country/country.module.ts","webpack:///./src/app/login1/country/country.ts","webpack:///./src/app/login1/country/services/country.service.ts"],"names":[],"mappings":"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","file":"login1-country-country-module.js","sourcesContent":["module.exports = \"<h3>Add Country</h3>\\r\\n<form [formGroup]=\\\"countryForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\r\\n   <p> Name: <input formControlName=\\\"name\\\"> </p>\\r\\n   <p> Capital: <input formControlName=\\\"capital\\\"> </p>\\r\\n   <p> Currency: <input formControlName=\\\"currency\\\"> </p>\\r\\n   <p> <button>Add</button> </p>\\r\\n</form> \\r\\n\"","module.exports = \"<h3>Country List</h3>\\r\\n<div *ngFor=\\\"let country of countries | async\\\" [ngClass]= \\\"'sub-child-menu'\\\">\\r\\n<p> {{country.countryId}} - {{country.name}} -\\r\\n    {{country.capital}} - {{country.currency}}\\r\\n\\t| <a [routerLink]=\\\"['edit', country.countryId]\\\" routerLinkActive=\\\"active\\\">Edit</a>\\r\\n</p>\\r\\n</div>\\r\\n<div [ngClass]= \\\"'sub-child-container'\\\">\\r\\n\\t<router-outlet></router-outlet>  \\r\\n</div> \\r\\n\"","module.exports = \"<h3>Edit Country</h3>\\r\\n<p *ngIf=\\\"country\\\"><b>Country Id: {{country.countryId }} </b></p>\\r\\n<form [formGroup]=\\\"countryForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\r\\n   <p> Name: <input formControlName=\\\"name\\\"> </p>\\r\\n   <p> Capital: <input formControlName=\\\"capital\\\"> </p>\\r\\n   <p> Currency: <input formControlName=\\\"currency\\\"> </p>\\r\\n   <p> <button>Update</button> </p>\\r\\n</form> \\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot }  from '@angular/router';\r\nimport { CountryEditComponent } from './country/country-list/edit/country.edit.component';\r\nimport { DialogService } from './dialog.service';\r\n\r\n@Injectable({providedIn:'root'})\r\nexport class CountryEditCanDeactivateGuard implements CanDeactivate<CountryEditComponent> {\r\n  \r\n  constructor(private dialogService: DialogService) { }\r\n\r\n  canDeactivate(\r\n    component: CountryEditComponent,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | boolean {\r\n    \r\n      let url: string = state.url;\r\n      console.log('Url: '+ url);\r\n\r\n      if (!component.isUpdating && component.countryForm.dirty) {\r\n        component.isUpdating = false;\r\n        return this.dialogService.confirm('Discard changes for Country?');\r\n      }\r\n      return true;\r\n  }\r\n}","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CountryService } from '../services/country.service';\r\nimport { Country } from '../country';\r\nimport { DialogService } from '../../dialog.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    templateUrl: './add-country.component.html'\r\n})\r\nexport class AddCountryComponent { \r\n\tisAdding = false;\t\r\n\tconstructor(\r\n\t\tprivate countryService: CountryService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate router: Router,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t    private dialogService: DialogService) { }\r\n\t\t\r\n\tcountryForm = this.formBuilder.group({\r\n\t   name: '',\r\n\t   capital: '',\r\n\t   currency: ''\r\n\t});\t\r\n\tonFormSubmit() {\r\n\t   this.isAdding = true;\t\r\n\t   let name = this.countryForm.get('name').value;\r\n\t   let capital = this.countryForm.get('capital').value;\r\n\t   let currency = this.countryForm.get('currency').value;\r\n\t   \r\n\t   let country = new Country(null, name, capital, currency);\r\n\t   this.countryService.addCountry(country)\r\n\t      .subscribe(() =>\r\n    \t\t  this.router.navigate([ '../list' ], { relativeTo: this.route })\r\n\t\t   );\r\n\t}\r\n\tcanDeactivate(): Observable<boolean> | boolean {\r\n\t\tif (!this.isAdding && this.countryForm.dirty) {\r\n\t\t    return this.dialogService.confirm('Discard unsaved Country?');\r\n\t\t}\r\n\t\treturn true;\r\n\t} \r\n}\r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CountryService } from '../services/country.service';\r\nimport { Country } from '../country';\r\n\r\n@Component({\r\n  templateUrl: './country.list.component.html' \r\n}) \r\nexport class CountryListComponent implements OnInit { \r\n  countries: Observable<Country[]>;\r\n  constructor(private countryService: CountryService) {}\r\n  ngOnInit() {\r\n    this.countries = this.countryService.getCountries();\r\n  }\t\r\n}\r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport { CountryService } from '../../services/country.service';\r\nimport { Country } from '../../country';\r\n\r\n@Component({\r\n  templateUrl: './country.edit.component.html' \r\n}) \r\nexport class CountryEditComponent implements OnInit {\r\n\tcountry: Country; \r\n\tcountryForm: FormGroup;\r\n\tisUpdating = false;\r\n\tconstructor(\r\n\t\tprivate countryService: CountryService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate router: Router,\r\n\t    private formBuilder: FormBuilder) { }\r\n\t\t\r\n    ngOnInit() {\r\n       this.route.params.pipe(\r\n\t\tswitchMap((params: Params) => this.countryService.getCountry(+params['country-id']))\r\n\t   )\r\n        .subscribe(country => {\r\n\t\t\t\tthis.country = country;\r\n\t\t      \tthis.createForm(country);\r\n\t    });\r\n    }\t\r\n\tcreateForm(country: Country) {\r\n\t\tthis.countryForm = this.formBuilder.group({\r\n\t\t    name: country.name,\r\n\t\t    capital: country.capital,\r\n\t\t    currency: country.currency\r\n\t\t});\t\r\n\t}\r\n  \tonFormSubmit() {\r\n\t\tthis.isUpdating = true;  \r\n\t\tthis.country.name = this.countryForm.get('name').value;\r\n\t\tthis.country.capital = this.countryForm.get('capital').value;\r\n\t\tthis.country.currency = this.countryForm.get('currency').value;\r\n\r\n\t    this.countryService.updateCountry(this.country)\r\n\t    .subscribe(() => \r\n\t\t    this.router.navigate([ '../../' ], { relativeTo: this.route })\r\n\t\t);\r\n\t}\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CountryComponent }  from './country.component';\r\nimport { CountryListComponent }  from './country-list/country.list.component';\r\nimport { AddCountryComponent }  from './add-country/add-country.component';\r\nimport { CountryEditComponent }  from './country-list/edit/country.edit.component';\r\nimport { CanDeactivateGuard }     from '../can-deactivate-guard.service';\r\nimport { CountryEditCanDeactivateGuard }     from '../country-edit-can-deactivate-guard.service';\r\n\r\nconst countryRoutes: Routes = [\r\n\t{ \r\n\t    path: '',\r\n\t\t\tcomponent: CountryComponent,\r\n      children: [ \r\n\t     {\r\n\t\t     path: 'add',\r\n\t\t\t   component: AddCountryComponent,\r\n\t\t\t   canDeactivate: [CanDeactivateGuard]\r\n\t\t   },\r\n\t     {\r\n\t       path: 'list',\r\n\t\t\t   component: CountryListComponent,\r\n\t\t     children: [\r\n\t\t   \t   {\r\n\t\t\t        path: 'edit/:country-id',\r\n\t\t\t\t\t\t\tcomponent: CountryEditComponent,\r\n\t\t\t\t\t\t\tcanDeactivate: [CountryEditCanDeactivateGuard]\r\n\t\t\t     }\t   \r\n\t\t     ]\r\n\t     }\t\r\n\t    ]\r\n\t}  \r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(countryRoutes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class CountryRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `<h2>Welcome to Country Home</h2>\r\n    <nav [ngClass] = \"'child-menu'\">\r\n      <ul>\r\n\t    \t<li><a [routerLink]=\"['add']\" routerLinkActive=\"active\">Add Country</a></li>\r\n\t    \t<li><a [routerLink]=\"['list']\" routerLinkActive=\"active\">Country List</a></li>\r\n      </ul>  \r\n\t  </nav>  \r\n\t \r\n  \t<div [ngClass] = \"'child-container'\">\t\r\n\t    <router-outlet></router-outlet>\t\r\n  \t</div>\r\n  `\r\n})\r\nexport class CountryComponent { \r\n}\r\n    ","import { NgModule, CUSTOM_ELEMENTS_SCHEMA }   from '@angular/core';\r\nimport { CommonModule }   from '@angular/common';\r\nimport { ReactiveFormsModule }    from '@angular/forms';\r\nimport { CountryComponent }  from './country.component';\r\nimport { AddCountryComponent }  from './add-country/add-country.component';\r\nimport { CountryListComponent }  from './country-list/country.list.component';\r\nimport { CountryEditComponent }  from './country-list/edit/country.edit.component';\r\nimport { CountryService } from './services/country.service';\r\nimport { CountryRoutingModule }  from './country-routing.module';\r\nimport { LogoutBasicComponent } from 'src/app/authentication/login-basic/logout-basic.component';\r\n\r\n@NgModule({\r\n  imports: [     \r\n    CommonModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCountryRoutingModule\r\n  ], \r\n  declarations: [\r\n\t\tCountryComponent,\r\n\t\tAddCountryComponent,\r\n\t\tCountryListComponent,\r\n    CountryEditComponent\r\n  ],\r\n  providers: [ CountryService ],\r\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CountryModule { }\r\n","export class Country { \r\n\tconstructor(public countryId:number, public name:string,\r\n            \tpublic capital:string, public currency:string) {\r\n\t}\r\n}\r\n    ","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { Country } from '../country';\r\nimport {map} from 'rxjs/operators';\r\nconst COUNTRIES = [\r\n  new Country(1, 'India', 'New Delhi', 'INR'),\r\n  new Country(2, 'China', 'Beijing', 'RMB')\r\n];\r\nlet countriesObservable = of(COUNTRIES);\r\n\r\n@Injectable({\r\n\tprovidedIn:'root'\r\n})\r\nexport class CountryService { \r\n  getCountries(): Observable<Country[]> {\r\n\t    return countriesObservable;\r\n  }\r\n  getCountry(id: number): Observable<Country> {\r\n\t   \treturn this.getCountries().pipe(\r\n\t\t\tmap(countries => countries.find(country => country.countryId === id))\r\n\r\n\t\t   );\r\n  }\t\r\n  updateCountry(country: Country): Observable<Country> {\r\n\t   \treturn this.getCountries().pipe(\r\n\t\t\tmap(countries => {\r\n\t\t        let countryObj = countries.find(ob => ob.countryId === country.countryId);\r\n                countryObj = country;\r\n\t\t\t\treturn countryObj;\r\n\t\t  \t})\r\n\r\n\t\t   );\r\n  }\t\r\n  addCountry(country: Country): Observable<Country> {\r\n\t\treturn this.getCountries().pipe(\r\n\t\t\tmap(countries => {\r\n\t\t\t\tlet maxIndex = countries.length - 1;\r\n\t\t\t\tlet countryWithMaxIndex = countries[maxIndex];\r\n\t\t\t\tcountry.countryId = countryWithMaxIndex.countryId + 1;\r\n\t\t\t\tcountries.push(country);\r\n\t\t\t\treturn country;\r\n\t\t\t  })\r\n  \r\n\t\t);\r\n  }\t\r\n}"],"sourceRoot":""}